plugins {
    id 'java'
    id 'war'
    id 'jacoco'
//    id "io.freefair.aspectj" version "5.1.1"
    id "io.freefair.aspectj.post-compile-weaving" version "6.4.1"
}

group = 'ru.y_lab'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // PostgreSQL Driver
    runtimeOnly 'org.postgresql:postgresql:42.7.3'

    // Liquibase
    implementation 'org.liquibase:liquibase-core:4.17.2'

    implementation 'org.aspectj:aspectjrt:1.9.8'
    implementation 'org.aspectj:aspectjweaver:1.9.8'

    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // MapStruct
//    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
//    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Servlet API
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'

    // YAML parser
    implementation 'org.yaml:snakeyaml:2.2'

    // JUnit for testing
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Mockito for mocking in tests
    testImplementation 'org.mockito:mockito-core:5.12.0'

    // Testcontainers for integration tests
    testImplementation 'org.testcontainers:testcontainers:1.19.8'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.8'
    testImplementation 'org.testcontainers:postgresql:1.19.8'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-source", "17", "-target", "17"]
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}


